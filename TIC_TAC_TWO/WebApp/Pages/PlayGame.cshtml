@page
@using GameBrain
@model WebApp.Pages.PlayGame

@{
    Layout = "Shared/_Layout";
    bool gameOver = Model.GameOver;
    string currentPlayer = Model.CurrentPlayer;
}
<h2 class="text-center my-4">Tic Tac Two Game Board</h2>

@if (TempData["Message"] != null)
{
    <div class="alert alert-warning text-center">
        @TempData["Message"]
    </div>
}

@if (Model.GameBrain == null)
{
    <div class="alert alert-danger text-center">
        No game configuration selected. Please go back and select a configuration.
    </div>
}
else
{
    var action = TempData["Action"] as string ?? "MakeMove";
    var showOptions = TempData["ShowOptions"] != null && !gameOver && action == "MakeMove";
    var selectedPiece = TempData["SelectedPiece"] as string;

    <form method="post">
        <input type="hidden" name="ConfigName" value="@Model.ConfigName"/>
        <table class="table table-bordered mx-auto" style="width: max-content;">
            @for (int y = 0; y < Model.GameBrain.DimY; y++)
            {
                <tr>
                    @for (int x = 0; x < Model.GameBrain.DimX; x++)
                    {
                        var piece = Model.GameBrain.GameBoard[x][y];
                        string symbol = piece == EGamePiece.X ? "X" : piece == EGamePiece.O ? "O" : " ";
                        bool isInGrid = x >= Model.GameBrain.GridPosition.x &&
                                        x < Model.GameBrain.GridPosition.x + Model.GameBrain.GridWidth &&
                                        y >= Model.GameBrain.GridPosition.y &&
                                        y < Model.GameBrain.GridPosition.y + Model.GameBrain.GridHeight;

                        <td class="text-center align-middle"
                            style="width:60px; height:60px; position: relative; @((isInGrid ? "border: 2px solid red;" : ""))">
                            @if (!gameOver)
                            {
                                if (piece == EGamePiece.Empty && (action == "MakeMove" || action == "MovePieceTarget"))
                                {
                                    <button type="submit" name="Move" value="@x,@y" class="btn btn-link p-0" style="width:100%; height:100%;">
                                        &nbsp;
                                    </button>
                                }
                                else if (action == "MovePiece" || action == "MovePieceTarget")
                                {
                                    // If MovePiece: user must choose a piece cell first
                                    // If MovePieceTarget: user must choose target cell
                                    // For MovePiece:
                                    // If the cell has a piece belonging to the current player and is in grid, show a button
                                    if (action == "MovePiece" && piece == Model.GameBrain._nextMoveBy && isInGrid)
                                    {
                                        <button type="submit" name="Move" value="@x,@y" class="btn btn-link p-0" style="width:100%; height:100%;">
                                            @symbol
                                        </button>
                                    }
                                    else
                                    {
                                        <span style="font-size: 24px; color:@(piece == EGamePiece.X ? "blue" : piece == EGamePiece.O ? "green" : "black");">
                                            @symbol
                                        </span>
                                    }
                                }
                                else
                                {
                                    <span style="font-size: 24px; color:@(piece == EGamePiece.X ? "blue" : piece == EGamePiece.O ? "green" : "black");">
                                        @symbol
                                    </span>
                                }
                            }
                            else
                            {
                                // If gameOver = true, just display symbol
                                <span style="font-size: 24px; color:@(piece == EGamePiece.X ? "blue" : piece == EGamePiece.O ? "green" : "black");">
                                    @symbol
                                </span>
                            }
                        </td>
                    }
                </tr>
            }
        </table>
    </form>

    @if (showOptions && !gameOver)
    {
        <div class="alert alert-info text-center mt-3">
            <h4>Choose Your Next Action:</h4>
            <form method="post">
                <input type="hidden" name="ConfigName" value="@Model.ConfigName"/>
                <button type="submit" name="action" value="MovePiece" class="btn btn-primary mx-2">Move Your Piece</button>
                <button type="submit" name="action" value="MoveGrid" class="btn btn-warning mx-2">Move the Grid</button>
                <button type="submit" name="action" value="MakeMove" class="btn btn-success mx-2">Make a Move</button>
            </form>
        </div>
    }

    @if (action == "MoveGrid" && !gameOver)
    {
        <div class="alert alert-info text-center mt-3">
            <h4>Select a Direction to Move the Grid:</h4>
            <form method="post">
                <input type="hidden" name="ConfigName" value="@Model.ConfigName"/>
                <div class="d-flex justify-content-center mb-2">
                    <button type="submit" name="Direction" value="up-left" class="btn btn-secondary mx-2">Up-Left</button>
                    <button type="submit" name="Direction" value="up" class="btn btn-secondary mx-2">Up</button>
                    <button type="submit" name="Direction" value="up-right" class="btn btn-secondary mx-2">Up-Right</button>
                </div>
                <div class="d-flex justify-content-center">
                    <button type="submit" name="Direction" value="left" class="btn btn-secondary mx-2">Left</button>
                    <button type="submit" name="Direction" value="right" class="btn btn-secondary mx-2">Right</button>
                </div>
                <div class="d-flex justify-content-center mt-2">
                    <button type="submit" name="Direction" value="down-left" class="btn btn-secondary mx-2">Down-Left</button>
                    <button type="submit" name="Direction" value="down" class="btn btn-secondary mx-2">Down</button>
                    <button type="submit" name="Direction" value="down-right" class="btn btn-secondary mx-2">Down-Right</button>
                </div>
            </form>
        </div>
    }

    @if (action == "MovePiece" && !gameOver)
    {
        <div class="alert alert-info text-center mt-3">
            <h4>Click on the piece you want to move (must be your own piece in the grid).</h4>
        </div>
    }

    @if (action == "MovePieceTarget" && !gameOver)
    {
        <div class="alert alert-info text-center mt-3">
            <h4>Piece selected. Now click on an empty cell within the grid to place it.</h4>
        </div>
    }
}